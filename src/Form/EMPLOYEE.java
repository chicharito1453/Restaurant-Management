/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Entity.NHANVIEN;
import Model.GHIHOADONDAO;
import Model.NHANVIENDAO;
import TienIch.Auth;
import TienIch.JdbcHelper;
import TienIch.MsgBox;
import TienIch.XImage;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.io.FileWriter;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author LENOVO
 */
public class EMPLOYEE extends javax.swing.JFrame {

    NHANVIENDAO nvdao = new NHANVIENDAO();
    GHIHOADONDAO ghddao = new GHIHOADONDAO();
    int row = 0;
    String fileName = "";

    /**
     * Creates new form QLNV
     */
    public EMPLOYEE() {
        initComponents();
        init();
    }

    public EMPLOYEE(NHANVIEN nv) {
        initComponents();
        init();
        Auth.user = nv;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblAvatar = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        txtTenNV = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtCMND = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        rboNam = new javax.swing.JRadioButton();
        rboNu = new javax.swing.JRadioButton();
        rboQL = new javax.swing.JRadioButton();
        rboTN = new javax.swing.JRadioButton();
        rboNV = new javax.swing.JRadioButton();
        btnFirst = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnAvatar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtRePass = new javax.swing.JPasswordField();
        txtSearch = new javax.swing.JTextField();
        bntSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        btnExportDCD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÝ NHÂN VIÊN");
        setResizable(false);

        lblAvatar.setBackground(new java.awt.Color(255, 255, 255));
        lblAvatar.setToolTipText("noimage.jpg");
        lblAvatar.setAlignmentY(0.0F);
        lblAvatar.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("QUẢN LÍ NHÂN VIÊN");

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_NHANVIEN/lui.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_NHANVIEN/tien.png"))); // NOI18N
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        txtTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNVActionPerformed(evt);
            }
        });

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/new.png"))); // NOI18N
        btnNew.setText("NEW");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save.png"))); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        rboNam.setText("NAM");
        rboNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rboNamActionPerformed(evt);
            }
        });

        rboNu.setText("NỮ");
        rboNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rboNuActionPerformed(evt);
            }
        });

        rboQL.setText("QUẢN LÍ");
        rboQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rboQLActionPerformed(evt);
            }
        });

        rboTN.setText("THU NGÂN");
        rboTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rboTNActionPerformed(evt);
            }
        });

        rboNV.setText("NHÂN VIÊN");
        rboNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rboNVActionPerformed(evt);
            }
        });

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_NHANVIEN/fist.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img_NHANVIEN/last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnAvatar.setText("CHOOSE AVATAR");
        btnAvatar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvatarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("GT:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Vai Trò:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tên NV:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tuổi:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("SĐT:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("CMND:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Password:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Mã NV:");

        lblStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(255, 0, 0));
        lblStatus.setText("0 of 0");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Re-Password:");

        txtSearch.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(204, 204, 204));
        txtSearch.setText("Nhập mã nhân viên");
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtSearchMousePressed(evt);
            }
        });

        bntSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconSearch.jpg"))); // NOI18N
        bntSearch.setText("Search");
        bntSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRePass)
                                    .addComponent(txtPass)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel10))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtTenNV)
                                                    .addComponent(txtTuoi)
                                                    .addComponent(txtMaNV)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(rboQL)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(rboTN)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(rboNV))
                                                    .addComponent(txtSDT)
                                                    .addComponent(txtCMND)))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel5)
                                                .addGap(39, 39, 39)
                                                .addComponent(rboNam)
                                                .addGap(18, 18, 18)
                                                .addComponent(rboNu))
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel14))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblStatus)))
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(77, Short.MAX_VALUE)
                        .addComponent(btnFirst)
                        .addGap(57, 57, 57)
                        .addComponent(btnPre)
                        .addGap(58, 58, 58)
                        .addComponent(btnNext)
                        .addGap(54, 54, 54)
                        .addComponent(btnLast)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bntSearch))
                            .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntSearch)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rboNu)
                            .addComponent(rboNam)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rboQL)
                            .addComponent(rboTN)
                            .addComponent(rboNV)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(9, 9, 9)
                        .addComponent(lblStatus)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNext)
                            .addComponent(btnFirst)
                            .addComponent(btnPre)
                            .addComponent(btnLast)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        tab.addTab("Thông tin nhân viên", jPanel1);

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NV", "HỌ TÊN", "TUỔI", "GIỚI TÍNH", "SĐT", "CMND", "Vai trò", "Lương ca"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        btnExportDCD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/iconNutExportExcel.png"))); // NOI18N
        btnExportDCD.setText("EXPORT TO EXCEL");
        btnExportDCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportDCDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportDCD)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportDCD)
                .addGap(6, 6, 6))
        );

        tab.addTab("Danh sách nhân viên", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAvatarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvatarActionPerformed
        ChonAvatar();
    }//GEN-LAST:event_btnAvatarActionPerformed

    private void rboNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rboNVActionPerformed
        rboQL.setSelected(false);
        rboTN.setSelected(false);
        rboNV.setSelected(true);
    }//GEN-LAST:event_rboNVActionPerformed

    private void rboTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rboTNActionPerformed
        rboQL.setSelected(false);
        rboTN.setSelected(true);
        rboNV.setSelected(false);
    }//GEN-LAST:event_rboTNActionPerformed

    private void rboQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rboQLActionPerformed
        rboQL.setSelected(true);
        rboTN.setSelected(false);
        rboNV.setSelected(false);
    }//GEN-LAST:event_rboQLActionPerformed

    private void rboNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rboNuActionPerformed
        rboNam.setSelected(false);
        rboNu.setSelected(true);
    }//GEN-LAST:event_rboNuActionPerformed

    private void rboNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rboNamActionPerformed
        rboNam.setSelected(true);
        rboNu.setSelected(false);
    }//GEN-LAST:event_rboNamActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNVActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        insert();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        row = tblNhanVien.getSelectedRow();
        edit();
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        prev();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void bntSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSearchActionPerformed
        search();
    }//GEN-LAST:event_bntSearchActionPerformed

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        if(txtSearch.getText().trim().equalsIgnoreCase("")){
            txtSearch.setText("Nhập mã nhân viên");
            txtSearch.setFont(new Font("Tahoma",Font.ITALIC,12));
            txtSearch.setForeground(new Color(204,204,204));
        }
    }//GEN-LAST:event_txtSearchFocusLost

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        if(txtSearch.getForeground()!=Color.black){
            txtSearch.setText("");
            txtSearch.setFont(new Font("Tahoma",Font.PLAIN,12));
            txtSearch.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtSearchMouseClicked

    private void txtSearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMousePressed
        if(txtSearch.getForeground()!=Color.black){
            txtSearch.setText("");
            txtSearch.setFont(new Font("Tahoma",Font.PLAIN,12));
            txtSearch.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtSearchMousePressed

    private void btnExportDCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportDCDActionPerformed
        export();
    }//GEN-LAST:event_btnExportDCDActionPerformed

    private void updateStatus() {
        lblStatus.setText((row + 1) + " of " + tblNhanVien.getRowCount());
    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);
        try {
            List<NHANVIEN> list = nvdao.selectAll();
            for (NHANVIEN nv : list) {
                Object[] row = {nv.getIdNV(), nv.getTenNV(), nv.getTuoi(),
                    nv.isGt() ? "Nam" : "Nữ", nv.getSdt(), nv.getCmnd(), nv.getVaiTro(), nv.getLuongCa()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    void init() {
        this.setIconImage(XImage.getAppIcon());
        setLocationRelativeTo(null);
        fillTable();
        row = 0;
        lblAvatar.setIcon(XImage.read("noimage.jpg"));
        if (tblNhanVien.getRowCount() > 0) {
            edit();
            updateStatus();
        }
    }

    void SetForm(NHANVIEN nv) {
        txtMaNV.setText(nv.getIdNV());
        txtTenNV.setText(nv.getTenNV());
        txtTuoi.setText(String.valueOf(nv.getTuoi()));
        if (nv.isGt()) {
            rboNam.setSelected(true);
            rboNu.setSelected(false);
        } else {
            rboNam.setSelected(false);
            rboNu.setSelected(true);
        }
        txtSDT.setText(nv.getSdt());
        txtCMND.setText(nv.getCmnd());
        if (nv.getVaiTro().equalsIgnoreCase("Quản lí")) {
            rboQL.setSelected(true);
            rboTN.setSelected(false);
            rboNV.setSelected(false);
        } else if (nv.getVaiTro().equalsIgnoreCase("Thu ngân")) {
            rboQL.setSelected(false);
            rboTN.setSelected(true);
            rboNV.setSelected(false);
        } else {
            rboQL.setSelected(false);
            rboTN.setSelected(false);
            rboNV.setSelected(true);
        }

        //Lấy ảnh từ thư mục logos
        try {
            Image img = this.read(nv.getAvatar());
            Image resizedImage = img.getScaledInstance(lblAvatar.getWidth(), lblAvatar.getHeight(), Image.SCALE_SMOOTH);
            lblAvatar.setIcon(new ImageIcon(resizedImage));
            lblAvatar.setToolTipText(nv.getAvatar());
        } catch (Exception e) {
        }

        txtPass.setText(nv.getPass());
        txtRePass.setText(nv.getPass());
    }

    //Hàm đọc ảnh kiểu Image khác XImage, để resize kích thước ảnh
    public Image read(String file) {
        File f = new File("logos", file);
        try {
            Image img = ImageIO.read(f);
            return img;
        } catch (Exception ex) {

        }
        return null;
    }

    NHANVIEN getForm() {
        NHANVIEN nv = new NHANVIEN();
        nv.setIdNV(txtMaNV.getText().trim());
        nv.setTenNV(txtTenNV.getText().trim());
        nv.setTuoi(Integer.parseInt(txtTuoi.getText().trim()));
        if (rboNam.isSelected()) {
            nv.setGt(true);
        }
        if (rboNu.isSelected()) {
            nv.setGt(false);
        }
        nv.setSdt(txtSDT.getText().trim());
        nv.setCmnd(txtCMND.getText().trim());
        if (rboQL.isSelected()) {
            nv.setVaiTro(rboQL.getText());
            nv.setLuongCa(150000);
        } else if (rboTN.isSelected()) {
            nv.setVaiTro(rboTN.getText());
            nv.setLuongCa(75000);
        } else {
            nv.setVaiTro(rboNV.getText());
            nv.setLuongCa(60000);
        }
        nv.setPass(txtPass.getText());
        nv.setAvatar(lblAvatar.getToolTipText());
        return nv;
    }

    void clearForm() {
        txtMaNV.setText("");
        txtTenNV.setText("");
        txtTuoi.setText("");
        rboNam.setSelected(false);
        rboNu.setSelected(false);
        txtSDT.setText("");
        txtCMND.setText("");
        rboQL.setSelected(false);
        rboTN.setSelected(false);
        rboNV.setSelected(false);
        txtPass.setText("");
        txtRePass.setText("");
        lblAvatar.setToolTipText("noimage.jpg");
        lblAvatar.setIcon(XImage.read("noimage.jpg"));
        txtMaNV.requestFocus();
    }

    void edit() {
        String MaNV = (String) tblNhanVien.getValueAt(this.row, 0);
        NHANVIEN nv = nvdao.selectById(MaNV);
        this.SetForm(nv);
        tblNhanVien.setRowSelectionInterval(row, row);
        tab.setSelectedIndex(0);
        this.updateStatus();
    }

    boolean check() {
        if (txtMaNV.getText().length() < 3) {
            if (txtMaNV.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên không được để trống!");
                return false;
            }
            if (txtMaNV.getText().length() > 0 && txtMaNV.getText().length() < 3) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên phải nhập ít nhất 3 ký tự!");
                return false;
            }
        } else if (txtTenNV.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên nhân viên không được để trống!");
            return false;
        } else if (txtTuoi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tuổi nhân viên không được để trống!");
            return false;
        } else if (!txtTuoi.getText().trim().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Tuổi nhân viên phải là số!");
            return false;
        } else if (Integer.parseInt(txtTuoi.getText().trim()) < 17 || Integer.parseInt(txtTuoi.getText().trim()) > 30) {
            JOptionPane.showMessageDialog(this, "Tuổi nhân viên phải từ 17-30");
            return false;
        } else if (!rboNam.isSelected() && !rboNu.isSelected()) {
            JOptionPane.showMessageDialog(this, "Chưa chọn giới tính nhân viên!");
            return false;
        } else if (txtSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống!");
            return false;
        } else if (!txtSDT.getText().trim().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải là số!");
            return false;
        } else if (txtSDT.getText().trim().length() > 11) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không dài hơn 11 số!");
            return false;
        } else if (txtCMND.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số cmnd không được để trống!");
            return false;
        } else if (!txtCMND.getText().trim().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Số cmnd phải là số!");
            return false;
        } else if (txtCMND.getText().trim().length() > 12) {
            JOptionPane.showMessageDialog(this, "Số cmnd không dài hơn 12 số!");
            return false;
        } else if (!rboQL.isSelected() && !rboTN.isSelected() && !rboNV.isSelected()) {
            JOptionPane.showMessageDialog(this, "Chưa chọn vai trò nhân viên!");
            return false;
        } else if (txtPass.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập mật khẩu!");
            return false;
        } else if (txtRePass.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa xác nhận mật khẩu!");
            return false;
        } else if (!txtRePass.getText().trim().equalsIgnoreCase(txtPass.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Xác nhận mật khẩu chưa đúng!");
            return false;
        }
        return true;
    }

    void insert() {
        if (check()) {
            int count = 0;
            List<NHANVIEN> list = nvdao.selectAll();
            for (int i = 0; i < list.size(); i++) {
                if (list.get(i).getIdNV().equalsIgnoreCase(txtMaNV.getText().trim())) {
                    count++;
                    break;
                }
            }
            if (count > 0) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại!");
            } else {
                NHANVIEN nv = getForm();
                nvdao.insert(nv);
                fillTable();
                clearForm();
                updateStatus();
                JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!");
            }
        }
    }

    void update() {
        int count = 0;
        List<NHANVIEN> list = nvdao.selectAll();
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getIdNV().equalsIgnoreCase(txtMaNV.getText().trim())) {
                count++;
                break;
            }
        }
        if (count == 0) {
            MsgBox.alert(this, "Không tìm thấy nhân viên có mã phù hợp!");
        } else {
            if (check()) {
                NHANVIEN nv = getForm();
                nvdao.update(nv);
                fillTable();
                JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            }
        }

    }

    void delete() {
        String maNV = txtMaNV.getText().trim();
        if (txtMaNV.getText().trim().isEmpty()) {
            MsgBox.alert(this, "Nhập mã nhân viên bạn cần xóa!");
        } else if (!ktraXoa(maNV)) {
            MsgBox.alert(this, "Không tìm thấy nhân viên có mã phù hợp!");
        } else if (Auth.isLogin() && maNV.equalsIgnoreCase(Auth.user.getIdNV())) {
            JOptionPane.showMessageDialog(this, "Bạn không được xóa chính bạn!");

        } else if (MsgBox.confirm(this, "Bạn có chắc muốn xóa nhân viên này?")) {
            String DELETE_LICH_NV = "DELETE FROM LICHLAM WHERE idNV = ?";
            JdbcHelper.Update(DELETE_LICH_NV, maNV);
            ghddao.delete(maNV);
            nvdao.delete(maNV);
            fillTable();
            clearForm();
            updateStatus();
            JOptionPane.showMessageDialog(this, "Đã xóa nhân viên!");
        }
    }

    public void ChonAvatar() {
        JFileChooser jf = new JFileChooser("src\\img_NHANVIEN\\");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("image", "jpg", "png", "gif");
        jf.setFileFilter(filter);
        jf.setMultiSelectionEnabled(false);

        int x = jf.showDialog(this, "Chọn ảnh");
        if (x == jf.APPROVE_OPTION) {
            File f = jf.getSelectedFile();
            fileName = f.getAbsolutePath();
            XImage.save(f);
            try {
                Image img = ImageIO.read(f);
                Image resizedImage = img.getScaledInstance(lblAvatar.getWidth(), lblAvatar.getHeight(), Image.SCALE_SMOOTH);
                lblAvatar.setIcon(new ImageIcon(resizedImage));
                lblAvatar.setToolTipText(f.getName());
            } catch (Exception e) {
            }
        } else {
            return;
        }
    }
    
    void search(){
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        String ndTim = txtSearch.getText().trim();
        NHANVIEN nv = nvdao.selectById(ndTim);
        if(nvdao.selectById(ndTim)!=null){
            SetForm(nv);
            for(int i=0;i<tblNhanVien.getRowCount();i++){
                if(tblNhanVien.getValueAt(i, 0).toString().equalsIgnoreCase(nv.getIdNV())){
                    row=i;
                    updateStatus();
                    tblNhanVien.setRowSelectionInterval(row, row);
                    MsgBox.alert(tab, "Đã tìm thấy nhân viên!");
                }
            }
        }else{
            MsgBox.alert(tab, "Không tìm thấy nhân viên có mã này!");
        }
//        String[]str = null;
//        if(txtTenCD.getForeground()==Color.black){
//            str= txtTenCD.getText().trim().split(" ");
//        }
//        List<Object[]> list = dao.getDiemChuyenDe();
//        boolean co = false;
//        for (Object[] row : list) {
//            if(txtTenCD.getForeground()==Color.black && row[0].toString().equalsIgnoreCase(txtTenCD.getText().trim())){
//                co = true;
//                model.addRow(new Object[]{
//                    row[0], row[1], row[2], row[3], row[4]
//                });
//            }
//            else if(txtTenCD.getForeground()==Color.black){
//                for(int i=0;i<str.length;i++){
//                    if(row[0].toString().toLowerCase().contains(str[i].toLowerCase())){
//                        co = true;
//                        model.addRow(new Object[]{
//                            row[0], row[1], row[2], row[3], row[4]
//                        });
//                        break;
//                    }
//                }
//            }
//        }
//        if(!co){
//            fillTableDiemChuyenDe();
//            MsgBox.alert(this, "Không tìm thấy chuyên đề");
//        }
    }
    
    void export(){
        JFileChooser jf = new JFileChooser("src\\Excel");
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.setMultiSelectionEnabled(false);
        
        int x = jf.showDialog(this, "Export");
        if (x == jf.APPROVE_OPTION) {
            File f = new File(jf.getSelectedFile().getAbsolutePath()+("\\Danh sách nhân viên.xls"));
            toExcel(tblNhanVien, f);
            MsgBox.alert(this, "Xuất file Excel thành công");
        }
    }
    
    void toExcel(JTable table, File file){
    try{
        TableModel model = table.getModel();
        FileWriter excel = new FileWriter(file);

        for(int i = 0; i < model.getColumnCount(); i++){
            excel.write(model.getColumnName(i) + "\t");
        }

        excel.write("\n");

        for(int i=0; i< model.getRowCount(); i++) {
            for(int j=0; j < model.getColumnCount(); j++) {
                excel.write(model.getValueAt(i,j).toString()+"\t");
            }
            excel.write("\n");
        }

        excel.close();

    }catch(Exception e){ System.out.println(e); }
}

    void first() {
        if (tblNhanVien.getRowCount() > 0) {
            this.row = 0;
            this.edit();
        }
    }

    void next() {
        if (tblNhanVien.getRowCount() > 0) {
            if (this.row < tblNhanVien.getRowCount() - 1) {
                this.row++;
                this.edit();
            } else {
                MsgBox.alert(this, "Đã ở cuối danh sách!");
            }
        }
    }

    void prev() {
        if (tblNhanVien.getRowCount() > 0) {
            if (this.row > 0) {
                this.row--;
                this.edit();
            } else {
                MsgBox.alert(this, "Đã ở đầu danh sách!");
            }
        }

    }

    void last() {
        if (tblNhanVien.getRowCount() > 0) {
            this.row = tblNhanVien.getRowCount() - 1;
            this.edit();
        }

    }

    boolean ktraXoa(String manv) {
        int count = 0;
        List<NHANVIEN> list = nvdao.selectAll();
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getIdNV().equalsIgnoreCase(manv)) {
                count++;
                break;
            }
        }
        if (count > 0) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EMPLOYEE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EMPLOYEE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EMPLOYEE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EMPLOYEE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EMPLOYEE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSearch;
    private javax.swing.JButton btnAvatar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExportDCD;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPre;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvatar;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JRadioButton rboNV;
    private javax.swing.JRadioButton rboNam;
    private javax.swing.JRadioButton rboNu;
    private javax.swing.JRadioButton rboQL;
    private javax.swing.JRadioButton rboTN;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtRePass;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables
}

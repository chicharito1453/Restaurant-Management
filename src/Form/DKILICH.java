/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Entity.LICHLAM;
import Entity.NHANVIEN;
import Model.LICHLAMDAO;
import TienIch.Auth;
import TienIch.MsgBox;
import TienIch.XDate;
import TienIch.XImage;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class DKILICH extends javax.swing.JFrame {

    LICHLAMDAO lldao = new LICHLAMDAO();
    String SELECT_LLNV = "SELECT * FROM LICHLAM WHERE idNV = ?";
    String SELECT_CHECKSONG = "SELECT * FROM LICHLAM WHERE ca = ? and ngay = ?";
    List<LICHLAM> a = new ArrayList<>();

    /**
     * Creates new form DKILICH
     */
    public DKILICH() {
        initComponents();
        init();
    }

    public DKILICH(NHANVIEN nv) {
        initComponents();
        init();
        fillTable();
        if (nv.getVaiTro().equalsIgnoreCase("NHÂN VIÊN")) {

            lblHienThi.setText("Nhân viên: " + nv.getIdNV());
        } else if (nv.getVaiTro().equalsIgnoreCase("THU NGÂN")) {
            lblHienThi.setText("Thu ngân: " + nv.getIdNV());
        }
        try {
            Image img = this.read(nv.getAvatar());
            Image resizedImage = img.getScaledInstance(lblAvtNV.getWidth(), lblAvtNV.getHeight(), Image.SCALE_SMOOTH);
            lblAvtNV.setIcon(new ImageIcon(resizedImage));
            lblAvtNV.setToolTipText(nv.getAvatar());
        } catch (Exception e) {
        }
    }

    public Image read(String file) {
        File f = new File("logos", file);
        try {
            Image img = ImageIO.read(f);
            return img;
        } catch (Exception ex) {

        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAvtNV = new javax.swing.JLabel();
        lblHienThi = new javax.swing.JLabel();
        cbbNgay = new javax.swing.JComboBox<String>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbbCa = new javax.swing.JComboBox<String>();
        btnDK = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnHuyDK = new javax.swing.JButton();
        cbbThang = new javax.swing.JComboBox<String>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLichNV = new javax.swing.JTable();
        cbbThang2 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbbNam = new javax.swing.JComboBox<String>();
        jLabel9 = new javax.swing.JLabel();
        cbbNam2 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(740, 510));
        setResizable(false);
        setSize(new java.awt.Dimension(400, 520));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAvtNV.setBackground(new java.awt.Color(102, 102, 255));
        lblAvtNV.setOpaque(true);
        getContentPane().add(lblAvtNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 150, 150));

        lblHienThi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHienThi.setForeground(new java.awt.Color(255, 51, 51));
        lblHienThi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHienThi.setText("NHÂN VIÊN: ");
        getContentPane().add(lblHienThi, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 160, 29));

        cbbNgay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(cbbNgay, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 156, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Ngày:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Ca:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, -1, -1));

        cbbCa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbCa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));
        getContentPane().add(cbbCa, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 156, -1));

        btnDK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDK.setText("Đăng Ký");
        btnDK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDKActionPerformed(evt);
            }
        });
        getContentPane().add(btnDK, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 420, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("* Ca 1 : 8h00 - 13h00");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 130, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("* Ca 2 : 13h00 - 18h00");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 130, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("* Ca 3 : 18h00 - 23h00");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 130, -1));

        btnHuyDK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHuyDK.setText("Hủy đăng kí");
        btnHuyDK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyDKActionPerformed(evt);
            }
        });
        getContentPane().add(btnHuyDK, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 420, -1, -1));

        cbbThang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbThangActionPerformed(evt);
            }
        });
        getContentPane().add(cbbThang, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 156, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tháng:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        tblLichNV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblLichNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nv", "Ca", "Ngày", "Lương ca", "Điểm danh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLichNV);
        if (tblLichNV.getColumnModel().getColumnCount() > 0) {
            tblLichNV.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 430, 310));

        cbbThang2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        getContentPane().add(cbbThang2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 90, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tháng:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Năm:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));

        cbbNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbNam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbNamMouseClicked(evt);
            }
        });
        cbbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNamActionPerformed(evt);
            }
        });
        getContentPane().add(cbbNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 156, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Năm");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, -1, -1));

        getContentPane().add(cbbNam2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 90, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbThangActionPerformed
        fillCBBNgay();
    }//GEN-LAST:event_cbbThangActionPerformed

    private void btnDKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDKActionPerformed
        insert();
    }//GEN-LAST:event_btnDKActionPerformed

    private void btnHuyDKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyDKActionPerformed
        delete();
    }//GEN-LAST:event_btnHuyDKActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    }//GEN-LAST:event_formWindowClosing

    private void cbbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNamActionPerformed
        if(cbbNam.getSelectedIndex()==0){
            fillCBBThang();
            fillCBBNgay();
        }
        else{
            DefaultComboBoxModel model = (DefaultComboBoxModel) cbbThang.getModel();
            DefaultComboBoxModel model2 = (DefaultComboBoxModel) cbbNgay.getModel();
            model.removeAllElements();
            model.addElement(1);
            model2.removeAllElements();
            for(int i=1;i<=30;i++){
                model2.addElement(i);
            }
        }
    }//GEN-LAST:event_cbbNamActionPerformed

    private void cbbNamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbNamMouseClicked
    }//GEN-LAST:event_cbbNamMouseClicked

    void init() {
        this.setIconImage(XImage.getAppIcon());
        setLocationRelativeTo(this);
        fillCBBNam();
        fillCBBThang();
        fillCBBNgay();
    }

    void fillCBBNam() {
        Calendar c = Calendar.getInstance();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbNam.getModel();
        DefaultComboBoxModel model2 = (DefaultComboBoxModel) cbbNam2.getModel();
        model.removeAllElements();
        model2.removeAllElements();
        int thang = c.get(Calendar.MONTH) + 1;
        int nam = c.get(Calendar.YEAR);
        model.addElement(nam);
        model2.addElement(nam);
        if (thang == 12) {
            model.addElement(nam + 1);
            model2.addElement(nam + 1);
        }
    }

    void fillCBBThang() {
        Calendar c = Calendar.getInstance();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbThang.getModel();
        DefaultComboBoxModel model2 = (DefaultComboBoxModel) cbbThang2.getModel();
        model2.setSelectedItem(c.get(Calendar.MONTH) + 1);
        model.removeAllElements();
        for (int i = c.get(Calendar.MONTH) + 1; i < 13; i++) {
            model.addElement(i);
        }
    }

    void fillCBBNgay() {
        try {
            Calendar c = Calendar.getInstance();
            DefaultComboBoxModel model = (DefaultComboBoxModel) cbbNgay.getModel();
            model.removeAllElements();
            int songay = soNgaycuaThang((int) cbbThang.getSelectedItem());
            for (int i = c.get(Calendar.DATE) + 1; i <= songay; i++) {
                model.addElement(i);
            }
        } catch (Exception e) {
        }
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblLichNV.getModel();
        model.setRowCount(0);
        a.clear();
        Calendar c = Calendar.getInstance();
        List<LICHLAM> list = lldao.selectLichNV_TG(Auth.user.getIdNV(), Integer.parseInt(cbbNam2.getSelectedItem().toString()), Integer.parseInt(cbbThang2.getSelectedItem().toString()));
        for (int i = 0; i < list.size(); i++) {
            a.add(list.get(i));
            model.addRow(new Object[]{
                list.get(i).getIdNV(), list.get(i).getCa(), list.get(i).getNgayLam(), list.get(i).getLuongCa(), list.get(i).isDiemDanh() ? "Có" : "Vắng"
            });
        }
    }

    public int soNgaycuaThang(int thang) {
        Calendar c = Calendar.getInstance();
        if (thang == 12) {
            return 31;
        } else if (thang == 11) {
            return 30;
        } else if (thang == 10) {
            return 31;
        } else if (thang == 9) {
            return 30;
        } else if (thang == 8) {
            return 31;
        } else if (thang == 7) {
            return 30;
        } else if (thang == 6) {
            return 31;
        } else if (thang == 5) {
            return 30;
        } else if (thang == 4) {
            return 31;
        } else if (thang == 3) {
            return 30;
        } else if (thang == 2) {
            if ((c.get(Calendar.YEAR) % 4 == 0 && c.get(Calendar.YEAR) % 100 != 0) || (c.get(Calendar.YEAR) % 400 == 0)) {
                return 29;
            } else {
                return 28;
            }
        } else {
            return 30;
        }
    }

    void insert() {
        if (check()) {
            lldao.insert(getLich());
            fillTable();
            MsgBox.alert(this, "Đăng kí lịch làm thành công!");
        }
    }

    void delete() {
        int index = tblLichNV.getSelectedRow();
        if (tblLichNV.getRowCount() == 0) {
            MsgBox.alert(this, "Bạn chưa có ca làm để hủy!");
        } else if (index < 0) {
            MsgBox.alert(this, "Chọn ca làm để hủy!");
        } else {
            Date ngayXoa = a.get(index).getNgayLam();
            Date today = XDate.toDate(getToday(), "MM/dd/yyyy");
            int kq = ngayXoa.compareTo(today);
            if (kq < 0) {
                MsgBox.alert(this, "Không thể hủy ca làm đã qua!");
            } else if (kq == 0) {
                MsgBox.alert(this, "Chỉ được hủy ca làm trước ít nhất 1 ngày!");
            } else {
                if (MsgBox.confirm(this, "Bạn có chắc muốn hủy ca làm này?")) {
                    lldao.delete(a.get(index).getStt());
                    fillTable();
                    MsgBox.alert(this, "Đã hủy ca làm!");
                }
            }
        }
    }

    boolean check() {
        Calendar c = Calendar.getInstance();
        Date ngayDK = XDate.toDate(getDate(), "MM/dd/yyyy");
        List<LICHLAM> list = lldao.selectLichNV(Auth.user.getIdNV());
        List<LICHLAM> list2 = lldao.checkSoNg_NV(Integer.parseInt(cbbCa.getSelectedItem().toString()), ngayDK);
        List<LICHLAM> list3 = lldao.checkSoNg_TN(Integer.parseInt(cbbCa.getSelectedItem().toString()), ngayDK);
        int count = 0;
        for (LICHLAM l : list) {
            if (Integer.parseInt(cbbCa.getSelectedItem().toString()) == l.getCa() && ngayDK.compareTo(l.getNgayLam()) == 0) {
                count++;
                break;
            }
        }
        if (count > 0) {
            MsgBox.alert(this, "Bạn đã đăng kí ca này rồi!");
            return false;
        } else if (Auth.user.getVaiTro().equalsIgnoreCase("NHÂN VIÊN") && list2.size() >= 5) {
            MsgBox.alert(this, "Ca làm này đã đủ người!");
            return false;
        } else if (Auth.user.getVaiTro().equalsIgnoreCase("THU NGÂN") && list3.size() >= 1) {
            MsgBox.alert(this, "Ca làm này đã có thu ngân!");
            return false;
        } else {
            return true;
        }
    }

    String getDate() {
        Calendar c = Calendar.getInstance();
        String thang = cbbThang.getSelectedItem().toString();
        String ngay = cbbNgay.getSelectedItem().toString();
        String nam = cbbNam.getSelectedItem().toString();
        String date = thang + "/" + ngay + "/" + nam;
        return date;
    }

    String getToday() {
        Calendar c = Calendar.getInstance();
        int thang = c.get(Calendar.MONTH) + 1;
        int ngay = c.get(Calendar.DATE);
        int nam = c.get(Calendar.YEAR);
        String date = thang + "/" + ngay + "/" + nam;
        return date;
    }

    LICHLAM getLich() {
        LICHLAM l = new LICHLAM();
        l.setIdNV(Auth.user.getIdNV());
        l.setCa(Integer.parseInt(cbbCa.getSelectedItem().toString()));
        l.setNgayLam(XDate.toDate(getDate(), "MM/dd/yyyy"));
        l.setLuongCa(Auth.user.getLuongCa());
        l.setVaitro(Auth.user.getVaiTro());
        return l;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DKILICH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DKILICH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DKILICH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DKILICH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DKILICH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDK;
    private javax.swing.JButton btnHuyDK;
    private javax.swing.JComboBox<String> cbbCa;
    private javax.swing.JComboBox<String> cbbNam;
    private javax.swing.JComboBox cbbNam2;
    private javax.swing.JComboBox<String> cbbNgay;
    private javax.swing.JComboBox<String> cbbThang;
    private javax.swing.JComboBox cbbThang2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvtNV;
    private javax.swing.JLabel lblHienThi;
    private javax.swing.JTable tblLichNV;
    // End of variables declaration//GEN-END:variables
}
